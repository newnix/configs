#!/usr/bin/env es
## Simple es configuration script
LANG=(en_US.UTF-8)
TERM=(xterm-256color)
path=(/sbin /bin /usr/sbin /usr/bin /usr/local/sbin /usr/local/bin $home^/bin $home^/bin/c)

## Make reloading the config easier
fn reload {
	. $home^/.esrc
}

## Everything is vim
fn vim {
	$editor $*
}

## Create a '++' pseudo-operator, mutates state internally
fn ++ i {
	## The argument 'i' is meant to be a variable reference,
	## used like so:
	## ; x = 0
	## ; ++ x
	## ; echo $x
	## 1
	$i = <= {
		$&sum $$i 1
	}
}

## Creates simple equality checks, similar to '==' or the '=' 'eq?' forms in some lisp dialects
fn eq a b {
	~ $a $b
}

## Modified form to accept variable references instead of values
fn veq a b {
	~ $$a $$b
}

## Enable prettier printing of the current primitives
fn primitives {
	local (pi = 1)
	let (plist = <= {$&primitives}) {
		echo Found $#plist primitives:
		for (p = $plist) {
			echo $pi: $p
			++ pi
		}
	}
}
